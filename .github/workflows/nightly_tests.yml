name: vHive nightly integration tests

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  integration-tests:
    name: Test all functions
    runs-on: [self-hosted, nightly, integ]
    steps:
    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Upgrade git
      run: |
        sudo add-apt-repository ppa:git-core/ppa -y
        sudo apt update
        sudo apt install git -y

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Pull binaries
      run: ./scripts/setup_firecracker_containerd.sh

    - name: Build
      run: go build -race -v -a ./...

    - name: Run all function tests
      run: make nightly-test

    - name: Cleaning
      if: ${{ always() }}
      run: ./scripts/clean_fcctr.sh

  cri-tests:
    name: CRI tests (nightly)
    runs-on: [self-hosted, cri]
    strategy:
      fail-fast: false
      matrix:
        vhive_args: ["-dbg", "-dbg -snapshots", "-dbg -snapshots -upf"]

    steps:

    - name: Host Info
      env:
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUNNER_VHIVE_ARGS: $${{ matrix.vhive_args }}
      run: |
        echo $HOSTNAME
        echo $GITHUB_RUN_ID

    - name: Setup TMPDIR
      run: mkdir -p $HOME/tmp

    - name: Set up Go 1.15
      env:
          GOROOT: $HOME/go
          GOCACHE: /root/tmp/gocache
          GOPATH: /root/tmp/gopath
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Setup firecracker-containerd
      run: ./scripts/setup_firecracker_containerd.sh

    - name: Build
      env:
          GOCACHE: /root/tmp/gocache
          GOPATH: /root/tmp/gopath
      run: go build

    - name: Run vHive CRI tests
      env:
          TMPDIR: /root/tmp/
          GOCACHE: /root/tmp/gocache
          GOPATH: /root/tmp/gopath
          GITHUB_RUN_ID: ${{ github.run_id }}
      run: make test-cri

    - name: Archive log artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: ctrd-logs
        path: |
          /tmp/ctrd-logs/${{ github.run_id }}

    - name: Cleaning
      if: ${{ always() }}
      run: ./scripts/github_runner/clean_cri_runner.sh
