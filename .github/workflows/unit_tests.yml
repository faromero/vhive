name: vHive unit tests

on:
  push:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'function-images/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
    - 'docs/**'
    - '**.md'
    - 'function-images/**'
  workflow_dispatch:

env:
  GOOS: linux
  GO111MODULE: on

jobs:
  unit-test:
    name: Unit test
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        module: [taps, misc, profile, utils/tracing/go, utils/tracing/python]
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
        
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Setup System
      run: ./scripts/setup_system.sh

    - name: Install PMU tools
      run: ./scripts/install_pmutools.sh

    - name: Get extra python packages
      run: pip install -r ./function-images/tests/tracing/python/integ-tests/client-server/requirements.txt

    - name: Build
      run: go build -race -v -a ./...

    - name: Run tests in submodules
      env:
          MODULE: ${{ matrix.module }}
      run: |
        make -C $MODULE test
        make -C $MODULE test-man
  
  firecracker-containerd-interface-test:
    name: "Unit tests: Firecracker-containerd interface"
    runs-on: [self-hosted, integ]
    steps:
    - name: Set up Go 1.16
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Upgrade git
      run: |
        sudo add-apt-repository ppa:git-core/ppa -y
        sudo apt update
        sudo apt install git -y
        
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        lfs: true
    
    - name: Pull binaries
      run: ./scripts/setup_firecracker_containerd.sh

    - name: Build
      run: go build -race -v -a ./...

    - name: Run tests in submodules
      run: |
        make -C ctriface test
        make -C ctriface test-man

    - name: Cleaning
      if: ${{ always() }}
      run: ./scripts/clean_fcctr.sh

  bench-python-tracing:
    name: Python Tracing tests (docker-compose)
    runs-on: ubuntu-18.04
    defaults:
      run:
        working-directory: ./function-images/tests/tracing/python/integ-tests/client-server
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    
    - name: build local images
      run: make all-image
    - name: Python client with docker-compose
      run: |
        docker-compose up --exit-code-from client
    - name: Golang client with docker-compose
      run: |
        docker-compose --file ./docker-compose-goclient.yml up --exit-code-from client
